import React, { useState } from 'react';

const AddService = () => {
    const [form, setForm] = useState({
        companyName: '',
        serviceName: '',
        serviceId: '',
        serviceDescription: '',
    });
    const [formErrors, setFormErrors] = useState({});

    const updateForm = (field, value) => {
        setForm((prevForm) => ({ ...prevForm, [field]: value }));
    };

    const validateForm = () => {
        const errors = {};
        if (!form.companyName) {
            errors.companyName = 'Company name is required';
        }
        if (!form.serviceName) {
            errors.serviceName = 'Service name is required';
        }
        if (!form.serviceId) {
            errors.serviceId = 'Service ID is required';
        }
        if (!form.serviceDescription) {
            errors.serviceDescription = 'Service description is required';
        }
        return errors;
    };

    const handleSubmit = (event) => {
        event.preventDefault();
        const errors = validateForm();
        if (Object.keys(errors).length === 0) {
            console.log('Valid form data:', form);
            setForm({
                companyName: '',
                serviceName: '',
                serviceId: '',
                serviceDescription: '',
            });
        } else {
            setFormErrors(errors);
        }
    };

    return (
        <div className="container">
            <h2>Add Service</h2>
            <form onSubmit={handleSubmit}>
                <div className="form-group">
                    <label htmlFor="companyName">Company/Organization Name:</label>
                    <input
                        type="text"
                        id="companyName"
                        name="companyName"
                        required
                        value={form.companyName}
                        onChange={(e) => updateForm('companyName', e.target.value)}
                    />
                    {formErrors.companyName && <span className="error">{formErrors.companyName}</span>}
                </div>

                <div className="form-group">
                    <label htmlFor="serviceName">Service Name:</label>
                    <input
                        type="text"
                        id="serviceName"
                        name="serviceName"
                        required
                        value={form.serviceName}
                        onChange={(e) => updateForm('serviceName', e.target.value)}
                    />
                    {formErrors.serviceName && <span className="error">{formErrors.serviceName}</span>}
                </div>

                <button type="submit">Add Service</button>
            </form>
        </div>
    );
};

export default AddService;

